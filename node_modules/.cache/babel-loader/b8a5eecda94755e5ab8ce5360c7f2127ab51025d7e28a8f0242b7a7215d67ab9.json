{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ratau\\\\Desktop\\\\Gato\\\\src\\\\components\\\\GameBoard\\\\index.jsx\";\nimport React from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = _ref => {\n  let {\n    winner,\n    currentPlayer,\n    winningCells,\n    handleCellClick,\n    resetGame,\n    board\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [winner ? winner === \"draw\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"winner-title\",\n      children: \"It's a draw!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"winner-title\",\n      children: [\"Player\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: winner,\n        children: [\" \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this), \" wins!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `winner-title`,\n      children: [\"Current Player:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPlayer,\n        children: [\" \", currentPlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cell ${winningCells.includes(index) ? 'winning' : ''} ${cell}`,\n        onClick: () => handleCellClick(index),\n        children: cell\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameBoard","_ref","winner","currentPlayer","winningCells","handleCellClick","resetGame","board","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cell","index","includes","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ratau/Desktop/Gato/src/components/GameBoard/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport './style.css'\r\n\r\nconst GameBoard = ({ winner,currentPlayer,winningCells,handleCellClick,resetGame,board }) => {\r\n    return (\r\n        <div className='game-board'>\r\n            {winner ? winner === \"draw\" ? (\r\n                <p className='winner-title'>It's a draw!</p>\r\n            ) : (\r\n                <p className='winner-title'>Player\r\n                    <span className={winner}> {winner}</span> wins!\r\n                </p>\r\n            ) : <p className={`winner-title`}>Current Player:\r\n                <span className={currentPlayer}> {currentPlayer}</span>\r\n            </p>}\r\n            <div className=\"board\">\r\n                {board.map((cell, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`cell ${winningCells.includes(index) ?'winning':''} ${cell}`}\r\n                        onClick={() => handleCellClick(index)}\r\n                    >\r\n                        {cell}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {winner && (\r\n                <div className=\"message\">\r\n                    <button onClick={resetGame}>Play Again</button>\r\n                </div>\r\n            )}</div>\r\n    )\r\n}\r\n\r\nexport default GameBoard"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,SAAS,GAAGC,IAAA,IAA2E;EAAA,IAA1E;IAAEC,MAAM;IAACC,aAAa;IAACC,YAAY;IAACC,eAAe;IAACC,SAAS;IAACC;EAAM,CAAC,GAAAN,IAAA;EACpF,oBACIF,OAAA;IAAKS,SAAS,EAAC,YAAY;IAAAC,QAAA,GACtBP,MAAM,GAAGA,MAAM,KAAK,MAAM,gBACvBH,OAAA;MAAGS,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5Cd,OAAA;MAAGS,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,QACxB,eAAAV,OAAA;QAAMS,SAAS,EAAEN,MAAO;QAAAO,QAAA,GAAC,GAAC,EAACP,MAAM;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,UAC7C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACN,gBAAGd,OAAA;MAAGS,SAAS,EAAG,cAAc;MAAAC,QAAA,GAAC,iBAC9B,eAAAV,OAAA;QAAMS,SAAS,EAAEL,aAAc;QAAAM,QAAA,GAAC,GAAC,EAACN,aAAa;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACJd,OAAA;MAAKS,SAAS,EAAC,OAAO;MAAAC,QAAA,EACjBF,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBjB,OAAA;QAEIS,SAAS,EAAG,QAAOJ,YAAY,CAACa,QAAQ,CAACD,KAAK,CAAC,GAAE,SAAS,GAAC,EAAG,IAAGD,IAAK,EAAE;QACxEG,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAACW,KAAK,CAAE;QAAAP,QAAA,EAErCM;MAAI,GAJAC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACLX,MAAM,iBACHH,OAAA;MAAKS,SAAS,EAAC,SAAS;MAAAC,QAAA,eACpBV,OAAA;QAAQmB,OAAO,EAAEZ,SAAU;QAAAG,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEpB,CAAC;AAAAM,EAAA,GA7BKnB,SAAS;AA+Bf,eAAeA,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}